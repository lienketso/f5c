<?phpClass Slide extends MY_Controller{	public function __construct(){		parent::__construct();		$this->load->model('slide_model');	}	function index(){		$this->load->library('pagination');		$input = array();		$input['where'] = array();		$total_row = $this->slide_model->get_total($input);		$this->data['total_row'] = $total_row;		$config = array();		if (count($_GET) > 0) $config['suffix'] = '?' . http_build_query($_GET, '', "&");		$config['base_url']    = admin_url('slide/index');		$config['first_url'] = $config['base_url'].'?'.http_build_query($_GET);		$config['total_rows']  = $total_row;		$config['per_page']    = 15;		$config['uri_segment'] = 4;		$config['full_tag_open'] = '<ul class="pagination pagination-flat pagination-success">';		$config['full_tag_close'] = '</ul>';		$config['num_tag_open'] = '<li class="page-item">';		$config['num_tag_close'] = '</li>';		$config['attributes'] = array('class' => 'page-link');		$config['first_link'] = '<i class="mdi mdi-chevron-left"></i>';		$config['last_link'] = '<i class="mdi mdi-chevron-right"></i>';		$config['last_tag_open'] = '<li class="page-item">';		$config['last_tag_close'] = '</li>';		$config['first_tag_open'] = '<li>';		$config['first_tag_close'] = '</li>';		$config['cur_tag_open'] = '<li class="page-item active"><a class="page-link" href="#">';		$config['cur_tag_close'] = '</a></li>';		$config['next_link'] = '<i class="mdi mdi-chevron-right"></i>';		$config['next_tag_open'] = '<li class="page-item">';		$config['next_tag_close'] = '</li>';		$config['prev_link'] = '<i class="mdi mdi-chevron-left"></i>';		$config['prev_tag_open'] = '<li class="page-item">';		$config['prev_tag_close'] = '</li>';		$this->pagination->initialize($config);		$segment = $this->uri->segment(4);		$segment = intval($segment);		$input["limit"] = array($config['per_page'], $segment);		$name = $this->input->get('name');		if($name){			$input['like'] = array('name', $name);		}		$list = $this->slide_model->get_list($input);		$this->data['list'] = $list;		//thông báo dữ liệu		$message = $this->session->flashdata('message');		$this->data['message'] = $message;		$this->data['temp'] = 'admin/slide/index';		$this->load->view('admin/main',$this->data);	}	function add(){		if($this->input->post()){			$this->form_validation->set_rules('name','Tiêu đề','required|min_length[6]');			//$this->form_validation->set_rules('image','Hình ảnh slide','required');			if($this->form_validation->run()){				$name = $this->input->post('name');				$link = $this->input->post('link');				$sort_order = $this->input->post('sort_order');				$image_name = $this->input->post('image_name');				//load thư viện uploads ảnh				$this->load->library('upload_library');				$upload_path = './uploads/slide';				$upload_data = $this->upload_library->upload($upload_path, 'image');				if(isset($upload_data['file_name'])){					$image_link = $upload_data['file_name'];				}				$data = array(					'name' => $name,					'image_name' => $image_name,					'link' => $link,					'sort_order' => $sort_order					);				$this->slide_model->create($data);				$this->session->set_flashdata('message', 'Thêm mới dữ liệu thành công !');				redirect(admin_url('slide'));			}		}		$this->data['temp'] = 'admin/slide/add';		$this->load->view('admin/main',$this->data);	}	function edit(){		$id = $this->uri->rsegment(3);		$id = intval($id);		$info = $this->slide_model->get_info($id);		$this->data['info'] = $info;		if($this->input->post()){			$this->form_validation->set_rules('name','Tiêu đề','required|min_length[4]');			if($this->form_validation->run()){				$name = $this->input->post('name');				$link = $this->input->post('link');				$sort_order = $this->input->post('sort_order');				$image_name = $this->input->post('image_name');			//lấy tên file ảnh, upload ảnh đại diện				$this->load->library('upload_library');				$upload_path = './uploads/slide';				$upload_data = $this->upload_library->upload($upload_path, 'image');				if(isset($upload_data['file_name'])){					$image_link = $upload_data['file_name'];				}				$data = array(					'name'=>$name,					'link'=>$link,					'sort_order'=>$sort_order,					'image_name'=>$image_name					);				$this->slide_model->update($id,$data);				$this->session->set_flashdata('message', 'Sửa dữ liệu thành công !');				//chuyển sang trang danh sách danh mục				redirect(admin_url('slide'));		}	}		$this->data['temp'] = 'admin/slide/edit';		$this->load->view('admin/main',$this->data);	}	function del(){		$id = $this->uri->rsegment(3);		$id = intval($id);		$info = $this->slide_model->get_info($id);		if(!$info){			$this->session->set_flashdata('message','Không tồn tại slide này');			redirect(admin_url('slide'));		}		$this->slide_model->deleteOne($id);		//xóa ảnh đã upload trên hệ thống kèm tin tức		$image_link = './uploads/slide/'.$info->image;		if(file_exists($image_link)){			unlink($image_link);		}		$this->session->set_flashdata('message','Xóa dữ liệu thành công');		redirect(admin_url('slide'));	}	function delete_all()    {        $ids = $this->input->post('id[]');        foreach ($ids as $id)        {            $this->_del($id);        }        $this->session->set_flashdata('message','Xóa tùy chọn thành công');        redirect(admin_url('slide'));    }    /*     *Xoa san pham     */    private function _del($id)    {        $slide = $this->slide_model->get_info($id);        if(!$slide)        {            //tạo ra nội dung thông báo            $this->session->set_flashdata('message', 'không tồn tại sản phẩm này');            redirect(admin_url('slide'));        }        //thuc hien xoa san pham        $this->slide_model->deleteOne($id);        //xóa ảnh đã upload trên hệ thống kèm tin tức		$image_link = './uploads/slide/'.$slide->image;		if(file_exists($image_link)){			unlink($image_link);		}    }}//end class