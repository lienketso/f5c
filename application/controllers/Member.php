<?php Class Member extends MY_Controller{	function __construct(){		parent::__construct();		$this->load->model('user_model');	}	//kiểm tra callback username	function check_email(){		$email = $this->input->post('email');		$where = array('email'=> $email);		if($this->user_model->check_exits($where)){			//trả về thông báo lỗi			$this->form_validation->set_message(__FUNCTION__,'Email đã được sử dụng !');			return false;		}		else{			return true;		}	}	function register(){		if($this->input->post()){			$this->form_validation->set_rules('name','Tên đầy đủ','required|min_length[4]');			$this->form_validation->set_rules('email','Địa chỉ email','required|valid_email|callback_check_email');			$this->form_validation->set_rules('phone','Số điện thoại','required|min_length[9]|numeric');			$this->form_validation->set_rules('password','Mật khẩu','required|min_length[4]');			$this->form_validation->set_rules('repassword','Nhập lại mật khẩu','matches[password]');			if($this->form_validation->run()){				$name = $this->input->post('name');				$email = $this->input->post('email');				$activation=md5($email.time());				$password = $this->input->post('password');				$password = md5($password);				$phone = $this->input->post('phone');				$ngaysinh = $this->input->post('ngaysinh');				$address = $this->input->post('address');				$data = array(					'name'=>$name,					'email'=>$email,					'password'=>$password,					'phone'=>$phone,					'ngaysinh' => $ngaysinh,					'address' => $address,					'active_code' => $activation				);				$this->user_model->create($data);				$this->session->set_flashdata('message', 'Đăng ký tài khoản thành công, đăng nhập thông tin bên dưới để sử dụng dịch vụ tại Plusmart');				redirect(base_url('login'));						}		}		$this->data['temp'] = 'site/member/register';		$this->load->view('site/layout',$this->data);	}	function register_success(){		$message = $this->session->flashdata('message');		$this->data['message'] = $message;		$this->data['temp'] = 'site/member_register/register_success';		$this->load->view('site/layout',$this->data);	}	function login(){		if($this->input->post()){		$this->form_validation->set_rules('password','Mật khẩu','required|min_length[2]');		$this->form_validation->set_rules('email','Email đăng nhập','required');		if($this->form_validation->run()){		$email = $this->input->post('email');		$password = $this->input->post('password');		$password = md5($password);		$where = array('email'=> $email,'password'=>$password);		if($this->user_model->check_exits($where)){			$user_login = $this->user_model->get_info_rule($where);			if($user_login){				$this->session->set_userdata('user_login_id', $user_login->id);				redirect(base_url('profile'));			}					}		}		}		$message = $this->session->flashdata('message');		$this->data['message'] = $message;		$this->data['temp'] = 'site/member/login';		$this->load->view('site/layout',$this->data);	}	function logout(){		if($this->session->userdata('user_login_id')){			$this->session->unset_userdata('user_login_id');			redirect(base_url());		}	}	function profile(){		$user_edit_id = $this->session->userdata('user_login_id');		$userInfo = $this->user_model->get_info($user_edit_id);		if(empty($userInfo)){			redirect();		}		if($this->input->post()){			$this->form_validation->set_rules('name','Tên đầy đủ','required|min_length[4]');			$this->form_validation->set_rules('phone','Số điện thoại','required|min_length[9]|numeric');			if($this->form_validation->run()){				$name = $this->input->post('name');				$address = $this->input->post('address');				$phone = $this->input->post('phone');				$ngaysinh = $this->input->post('ngaysinh');				$this->load->library('upload_library');				$upload_path = './uploads/plus';				$upload_data = $this->upload_library->upload($upload_path, 'image');				$image_link = '';				if(isset($upload_data['file_name'])){					$image_link = $upload_data['file_name'];				}else{					$image_link = '';				}				$data = array(					'name'=>$name,					'address'=>$address,					'phone'=>$phone,					'address' => $address,					'ngaysinh' => $ngaysinh				);				if($image_link!=''){					$data['image'] = $image_link;				}				$this->user_model->update($user_edit_id,$data);				$this->session->set_flashdata('message', 'Cập nhật dữ liệu thành công');				redirect(base_url('member/profile'));					}		}		$message = $this->session->flashdata('message');		$this->data['message'] = $message;		$this->data['temp'] = 'site/member/profile';		$this->load->view('site/layout',$this->data);	}	function changepass(){		$user_edit_id = $this->session->userdata('user_login_id');		if($this->input->post()){			$this->form_validation->set_rules('password','Mật khẩu mới','required|min_length[4]');			$this->form_validation->set_rules('repassword','Nhập lại mật khẩu','required|matches[password]');			if($this->form_validation->run()){				$password = $this->input->post('password');				$password = md5($password);				$repassword = $this->input->post('repassword');				$data = [					'password'=>$password				];				$this->user_model->update($user_edit_id,$data);				$this->session->set_flashdata('message', 'Đổi mật khẩu thành công !');				redirect(base_url('member/profile'));				}		}		$this->data['temp'] = 'site/member/changepass';		$this->load->view('site/layout',$this->data);	}	function mytopic(){		$this->load->model('news_model');		$this->load->model('news_catnews_model');		$user_edit_id = $this->session->userdata('user_login_id');		if(!$user_edit_id){			redirect();		}		$input = [];		$input['where'] = ['status'=>1,'member_id'=>$user_edit_id];		$this->load->library('pagination');		$total_row = $this->news_model->get_total($input);		$this->data['total_row'] = $total_row;		$config = array();		if (count($_GET) > 0) $config['suffix'] = '?' . http_build_query($_GET, '', "&");		$config['base_url']    = base_url('member/mytopic');		$config['first_url'] = $config['base_url'].'?'.http_build_query($_GET);		$config['total_rows']  = $total_row;		$config['per_page']    = 20;		$config['uri_segment'] = 2;		$config['full_tag_open'] = '<ul class="paginate-list">';		$config['full_tag_close'] = '</ul>';		$config['num_tag_open'] = '<li class="page">';		$config['num_tag_close'] = '</li>';		$config['first_link'] = '<i class="glyphicon glyphicon-menu-left"></i>';		$config['last_link'] = 'Last';		$config['last_tag_open'] = '<li class="page">';		$config['last_tag_close'] = '</li>';		$config['first_tag_open'] = '<li>';		$config['first_tag_close'] = '</li>';		$config['cur_tag_open'] = '<li class="active"><a class="active" href="#">';		$config['cur_tag_close'] = '</a></li>';		$config['next_link'] = 'Next';		$config['next_tag_open'] = '<li class="next">';		$config['next_tag_close'] = '</li>';		$config['prev_link'] = '<i class="glyphicon glyphicon-menu-left"></i> sau';		$config['prev_tag_open'] = '<li class="prev disabled">';		$config['prev_tag_close'] = '</li>';		$this->pagination->initialize($config);		$segment = $this->uri->segment(2);		$segment = intval($segment);		$input['order'] = ['created_at','desc'];		$input["limit"] = array($config['per_page'], $segment);		$list = $this->news_model->get_list($input);		$this->data['list'] = $list;		$this->data['temp'] = 'site/member/topic';		$this->load->view('site/layout',$this->data);	}}//end class